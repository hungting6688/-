name: Taiwan Stock Bot

on:
  schedule:
    # 執行時間以 UTC 為準，台灣時間需要加 8 小時，例如：
    # UTC 01:00 = 台灣時間 09:00 (早盤掃描)
    # UTC 02:30 = 台灣時間 10:30 (盤中掃描)
    # UTC 04:30 = 台灣時間 12:30 (午間掃描)
    # UTC 07:00 = 台灣時間 15:00 (盤後掃描)
    # UTC 09:00 = 台灣時間 17:00 (週末總結，僅週五)
    - cron: '0 1 * * 1-5'    # 早盤掃描 (週一至週五)
    - cron: '30 2 * * 1-5'   # 盤中掃描 (週一至週五)
    - cron: '30 4 * * 1-5'   # 午間掃描 (週一至週五)
    - cron: '0 7 * * 1-5'    # 盤後掃描 (週一至週五)
    - cron: '0 9 * * 5'      # 週末總結 (僅週五)
  
  # 允許手動觸發
  workflow_dispatch:
    inputs:
      run_type:
        description: '運行類型'
        required: true
        default: 'full'
        type: choice
        options:
          - full
          - morning_scan
          - mid_morning_scan
          - mid_day_scan
          - afternoon_scan
          - weekly_summary
          - test

jobs:
  run-stock-bot:
    runs-on: ubuntu-latest
    
    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4
      
    - name: 建立logs目錄
      run: mkdir -p logs cache data
      
    - name: 修正文件名 (如果需要)
      run: |
        # 檢查是否存在 requirement.txt 而非 requirements.txt
        if [ -f "requirement.txt" ] && [ ! -f "requirements.txt" ]; then
          cp requirement.txt requirements.txt
        fi
      
    - name: 設置 Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
        
    - name: 安裝依賴
      run: |
        python -m pip install --upgrade pip
        # 檢查 requirements.txt 文件是否存在
        if [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
        else
          # 如果找不到文件，直接安裝必要的套件
          pip install requests pandas numpy schedule python-dotenv pytz matplotlib
          echo "警告: 找不到 requirements.txt 文件，已安裝基本套件"
        fi
        
    - name: 移除建立必要目錄步驟
      run: echo "此步驟已被整合到前面的步驟中"
        
    - name: 執行機器人
      env:
        # 從 GitHub Secrets 獲取環境變量
        EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
        EMAIL_SMTP_SERVER: ${{ secrets.EMAIL_SMTP_SERVER || 'smtp.gmail.com' }}
        EMAIL_SMTP_PORT: ${{ secrets.EMAIL_SMTP_PORT || '587' }}
        EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS || 'True' }}
        STOCK_DATA_SOURCE: ${{ secrets.STOCK_DATA_SOURCE || 'twse' }}
        STOCK_API_KEY: ${{ secrets.STOCK_API_KEY || '' }}
      run: |
        # 顯示目錄內容以便排除問題 
        echo "目前工作目錄:"
        pwd
        echo "目錄內容:"
        ls -la
        echo "Python 版本:"
        python --version
        
        # 嘗試單次運行通知測試
        echo "執行單次簡單通知測試..."
        python test_notification.py --test simple
        
    - name: 上傳日誌文件
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: stock-bot-logs
        path: |
          logs/
          *.log
        if-no-files-found: warn
        retention-days: 7
