name: Enhanced Taiwan Stock Bot

on:
  schedule:
    # 台灣時間 = UTC + 8
    - cron: '0 1 * * 1-5'    # 09:00 早盤掃描
    - cron: '30 2 * * 1-5'   # 10:30 盤中掃描
    - cron: '30 4 * * 1-5'   # 12:30 午間掃描
    - cron: '0 7 * * 1-5'    # 15:00 盤後掃描
    - cron: '0 9 * * 5'      # 17:00 週末總結（僅週五）
  
  workflow_dispatch:
    inputs:
      run_type:
        description: '運行類型'
        required: true
        default: 'morning_scan'
        type: choice
        options:
          - morning_scan
          - mid_morning_scan
          - mid_day_scan
          - afternoon_scan
          - weekly_summary

jobs:
  stock-analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # 15分鐘總超時
    
    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4
      
    - name: 建立必要目錄
      run: |
        mkdir -p logs cache data
        mkdir -p data/analysis_results
        mkdir -p logs/notifications
        
    - name: 設置 Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: 安裝核心依賴
      run: |
        pip install --upgrade pip
        pip install requests pandas numpy python-dotenv pytz schedule beautifulsoup4 lxml
        
    # 新增：語法檢查步驟
    - name: 檢查語法
      run: |
        echo "🔍 檢查 Python 語法..."
        
        # 檢查主要檔案
        python -m py_compile enhanced_stock_bot.py || { echo "❌ enhanced_stock_bot.py 語法錯誤"; exit 1; }
        python -m py_compile notifier.py || { echo "❌ notifier.py 語法錯誤"; exit 1; }
        python -m py_compile twse_data_fetcher.py || { echo "❌ twse_data_fetcher.py 語法錯誤"; exit 1; }
        python -m py_compile config.py || { echo "❌ config.py 語法錯誤"; exit 1; }
        
        # 檢查其他重要檔案（如果存在）
        [ -f report_generator.py ] && python -m py_compile report_generator.py || true
        [ -f text_formatter.py ] && python -m py_compile text_formatter.py || true
        [ -f stock_analyzers.py ] && python -m py_compile stock_analyzers.py || true
        
        echo "✅ 所有檔案語法檢查通過！"
        
    - name: 執行股票分析
      timeout-minutes: 12
      env:
        EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
        EMAIL_SMTP_SERVER: ${{ secrets.EMAIL_SMTP_SERVER || 'smtp.gmail.com' }}
        EMAIL_SMTP_PORT: ${{ secrets.EMAIL_SMTP_PORT || '587' }}
        EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS || 'True' }}
      run: |
        RUN_TYPE="${{ github.event.inputs.run_type || 'morning_scan' }}"
        
        # ... 後續執行邏輯 ...
